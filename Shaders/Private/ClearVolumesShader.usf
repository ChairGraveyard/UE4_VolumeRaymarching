#include "/Engine/Private/Common.ush"

// Thx Temaran for original HLSL & usage example

/**
	Uniform Buffers have been replaced by regular shader parameters, as most are subject to change between calls.
*/

RWTexture3D<float> RLightVolume;
RWTexture3D<float> GLightVolume;
RWTexture3D<float> BLightVolume;
RWTexture3D<float> ALightVolume;

int ZSize;

float RClearValue;
float GClearValue;
float BClearValue;
float AClearValue;

[numthreads(32, 32, 1)]
void MainComputeShader(uint3 ThreadId : SV_DispatchThreadID)
{
    for (int i = 0; i <= ZSize; i++)
    {
        RLightVolume[int3(ThreadId.x, ThreadId.y, i)] = RClearValue;
        GLightVolume[int3(ThreadId.x, ThreadId.y, i)] = GClearValue;
        BLightVolume[int3(ThreadId.x, ThreadId.y, i)] = BClearValue;
        ALightVolume[int3(ThreadId.x, ThreadId.y, i)] = AClearValue;

    }
}
